ext.configurePublishing = { packageName, packageDesc, packageVersion ->
    tasks.register('sourcesJar', Jar) {
        it.dependsOn classes
        it.archiveClassifier.set('sources')
        it.from sourceSets.main.allSource
    }
    tasks.register('javadocJar', Jar) {
        it.dependsOn javadoc
        it.archiveClassifier.set('javadoc')
        it.from javadoc.destinationDir
    }
    publishing {
        repositories {
            maven {
                name = 'MavenCentral'
                def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
                def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username = System.getenv('NEXUS_UPD_ID')?.trim() ?: ''
                    password = System.getenv('NEXUS_UPD_PASS')?.trim() ?: ''
                }
            }
            maven {
                name = "realRobotixMaven"
                url = "https://maven.realrobotix.me/imgui-java/"
                credentials {
                    username = System.getenv("MAVEN_USER") ?: project.findProperty("realRobotixMavenUsername")
                    password = System.getenv("MAVEN_TOKEN") ?: project.findProperty("realRobotixMavenPassword")
                }
            }
        }
        publications {
            imgui(MavenPublication) {
                groupId = 'io.github.spair'
                artifactId = packageName
                version = packageVersion

                from components.java
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = packageName
                    description = packageDesc
                    url = 'https://github.com/SpaiR/imgui-java'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://opensource.org/license/mit/'
                        }
                    }
                    developers {
                        developer {
                            id = 'realRobotix'
                            name = 'realRobotix'
                            email = 'xzwmfki0p@mozmail.com'
                        }
                        developer {
                            id = 'SpaiR'
                            name = 'Ilya Prymshyts'
                            email = 'despsolver@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/realRobotix/imgui-java.git'
                        developerConnection = 'scm:git:https://github.com/realRobotix/imgui-java.git'
                        url = 'https://github.com/realRobotix/imgui-java/'
                    }
                }
            }
        }
    }
    if (System.getenv('SIGNING_KEY_ID') != null) {
        signing {
            def signingKeyId = System.getenv('SIGNING_KEY_ID')?.trim() ?: ''
            def signingKey = System.getenv('SIGNING_KEY')?.trim() ?: ''
            def signingKeyPass = System.getenv('SIGNING_KEY_PASS')?.trim() ?: ''
            useInMemoryPgpKeys(signingKeyId, signingKey, signingKeyPass)
            sign publishing.publications.imgui
        }
    }
}
